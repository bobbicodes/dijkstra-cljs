; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj::shadow.user=> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)

; Jack-in done.
cljs::cljs.user=> 
nil
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/g
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/demo-graph
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/computerphile
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/show!
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
; Execution error (FileNotFoundException) at dijkstra-cljs.viz/eval33238$loading (REPL:1).
; Could not locate dijkstra_cljs/random__init.class, dijkstra_cljs/random.clj or dijkstra_cljs/random.cljc on classpath. Please check that namespaces with dashes use underscores in the Clojure file name.
clojure.lang.RT/load (RT.java:462)
clojure.core/load (core.clj:6126)
clojure.core/load (core.clj:6125)
clojure.core/load (core.clj:6109)
clojure.core/load-one (core.clj:5908)
clojure.core/load-one (core.clj:5903)
clojure.core/load-lib (core.clj:5948)
clojure.core/load-lib (core.clj:5947)
clojure.core/load-lib (core.clj:5928)
clojure.core/apply (core.clj:667)
clojure.core/load-libs (core.clj:5985)
clojure.core/load-libs (core.clj:5969)
clojure.core/apply (core.clj:667)
clojure.core/require (core.clj:6007)
dijkstra-cljs.viz/eval33238 (NO_SOURCE_FILE:1)
clojure.lang.Compiler/eval (Compiler.java:7177)
clojure.core/eval (core.clj:3214)
clojure.core/eval (core.clj:3210)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:91)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:155)
nrepl.middleware.session/session-exec (session.clj:190)
nrepl.middleware.session/session-exec (session.clj:189)
java.lang.Thread/run (Thread.java:834)
clj::dijkstra-cljs.viz=> 
; Execution error (FileNotFoundException) at dijkstra-cljs.viz/eval33244$loading (REPL:1).
; Could not locate dijkstra_cljs/random__init.class, dijkstra_cljs/random.clj or dijkstra_cljs/random.cljc on classpath. Please check that namespaces with dashes use underscores in the Clojure file name.
clojure.lang.RT/load (RT.java:462)
clojure.core/load (core.clj:6126)
clojure.core/load (core.clj:6125)
clojure.core/load (core.clj:6109)
clojure.core/load-one (core.clj:5908)
clojure.core/load-one (core.clj:5903)
clojure.core/load-lib (core.clj:5948)
clojure.core/load-lib (core.clj:5947)
clojure.core/load-lib (core.clj:5928)
clojure.core/apply (core.clj:667)
clojure.core/load-libs (core.clj:5985)
clojure.core/load-libs (core.clj:5969)
clojure.core/apply (core.clj:667)
clojure.core/require (core.clj:6007)
dijkstra-cljs.viz/eval33244 (NO_SOURCE_FILE:1)
clojure.lang.Compiler/eval (Compiler.java:7177)
clojure.core/eval (core.clj:3214)
clojure.core/eval (core.clj:3210)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:91)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:155)
nrepl.middleware.session/session-exec (session.clj:190)
nrepl.middleware.session/session-exec (session.clj:189)
java.lang.Thread/run (Thread.java:834)
clj::dijkstra-cljs.viz=> 
; Execution error (FileNotFoundException) at dijkstra-cljs.viz/eval33250$loading (REPL:1).
; Could not locate dijkstra_cljs/random__init.class, dijkstra_cljs/random.clj or dijkstra_cljs/random.cljc on classpath. Please check that namespaces with dashes use underscores in the Clojure file name.
clojure.lang.RT/load (RT.java:462)
clojure.core/load (core.clj:6126)
clojure.core/load (core.clj:6125)
clojure.core/load (core.clj:6109)
clojure.core/load-one (core.clj:5908)
clojure.core/load-one (core.clj:5903)
clojure.core/load-lib (core.clj:5948)
clojure.core/load-lib (core.clj:5947)
clojure.core/load-lib (core.clj:5928)
clojure.core/apply (core.clj:667)
clojure.core/load-libs (core.clj:5985)
clojure.core/load-libs (core.clj:5969)
clojure.core/apply (core.clj:667)
clojure.core/require (core.clj:6007)
dijkstra-cljs.viz/eval33250 (NO_SOURCE_FILE:1)
clojure.lang.Compiler/eval (Compiler.java:7177)
clojure.core/eval (core.clj:3214)
clojure.core/eval (core.clj:3210)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:91)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:155)
nrepl.middleware.session/session-exec (session.clj:190)
nrepl.middleware.session/session-exec (session.clj:189)
java.lang.Thread/run (Thread.java:834)
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/nodes
clj::dijkstra-cljs.viz=> 
(:3 :2 :2 :2 :5 :5 :5 :3 :2 :5 :5 :1 :3 :3 :1 :5 :1)
clj::dijkstra-cljs.viz=> 
; Execution error (ClassCastException) at (REPL:1).
; null

clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/nodes
clj::dijkstra-cljs.viz=> 
; Execution error (ClassCastException) at (REPL:1).
; null

clj::dijkstra-cljs.viz=> 
(:1 :2 :3 :4 :5 :6)
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
(:3 :4 :4 :6 :6 :2 :1 :4 :2 :4 :4 :1 :1 :1 :5 :5 :1)
clj::dijkstra-cljs.viz=> 
(:2 :6 :1 :1 :1 :3 :2 :3 :6 :3 :6 :6 :2 :3 :5 :2 :3)
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {}}
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:3 7}, :4 {}, :5 {}, :6 {}}
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
(:1 :2 :3 :4 :5 :6)
clj::dijkstra-cljs.viz=> 
{:1 {:6 3}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {}}
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:5 5}, :3 {}, :4 {}, :5 {}, :6 {:3 1}}
clj::dijkstra-cljs.viz=> 
{:1 {:2 5}, :2 {}, :3 {}, :4 {:2 9}, :5 {:2 6}, :6 {:4 5}}
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {:5 2}}
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:3 6}, :4 {:4 6, :6 3}, :5 {:4 3}, :6 {}}
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/show!
clj::dijkstra-cljs.viz=> 
{:1 {:2 7}, :2 {:4 3}, :3 {:1 8}, :4 {}, :5 {}, :6 {:5 1}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:1 3}, :4 {}, :5 {}, :6 {:1 3}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:5 9}, :5 {:1 1}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:3 3}, :2 {}, :3 {}, :4 {}, :5 {:5 1}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:6 5}, :5 {}, :6 {:2 9}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:3 3}, :3 {:3 7}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
; Execution error (IllegalArgumentException) at dijkstra-cljs.viz/add-random-node (REPL:36).
; Don't know how to create ISeq from: clojure.lang.Keyword
clojure.lang.RT/seqFrom (RT.java:557)
clojure.lang.RT/seq (RT.java:537)
clojure.core/seq (core.clj:137)
clojure.core/reduce1 (core.clj:930)
clojure.core/set (core.clj:4113)
clojure.core/set (core.clj:4105)
dijkstra-cljs.viz/add-random-node (NO_SOURCE_FILE:36)
dijkstra-cljs.viz/add-random-node (NO_SOURCE_FILE:32)
clojure.lang.Iterate/first (Iterate.java:47)
clojure.lang.Iterate/next (Iterate.java:54)
clojure.lang.RT/nthFrom (RT.java:924)
clojure.lang.RT/nth (RT.java:897)
dijkstra-cljs.viz/eval33686 (NO_SOURCE_FILE:45)
dijkstra-cljs.viz/eval33686 (NO_SOURCE_FILE:44)
clojure.lang.Compiler/eval (Compiler.java:7177)
clojure.core/eval (core.clj:3214)
clojure.core/eval (core.clj:3210)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:91)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:155)
nrepl.middleware.session/session-exec (session.clj:190)
nrepl.middleware.session/session-exec (session.clj:189)
java.lang.Thread/run (Thread.java:834)
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {}}
clj::dijkstra-cljs.viz=> 
(:1 :2 :3 :4 :5 :6)
clj::dijkstra-cljs.viz=> 
#{:4 :1 :2 :5 :3 :6}
clj::dijkstra-cljs.viz=> 
#{:4 :1 :5 :3 :6}
clj::dijkstra-cljs.viz=> 
(#{:4 :1 :5 :3 :6})
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {(
; Execution error (IllegalArgumentException) at dijkstra-cljs.viz/show! (REPL:15).
; Don't know how to create ISeq from: clojure.lang.Keyword
clojure.lang.RT/seqFrom (RT.java:557)
clojure.lang.RT/seq (RT.java:537)
clojure.core/seq (core.clj:137)
clojure.core/filter (core.clj:2809)
clojure.lang.LazySeq/sval (LazySeq.java:42)
clojure.lang.LazySeq/seq (LazySeq.java:51)
clojure.lang.RT/seq (RT.java:535)
clojure.core/seq (core.clj:137)
clojure.core/print-sequential (core_print.clj:53)
clojure.core/fn (core_print.clj:174)
clojure.lang.MultiFn/invoke (MultiFn.java:234)
clojure.core/pr-on (core.clj:3674)
clojure.core/pr-on (core.clj:3668)
clojure.core/print-prefix-map (core_print.clj:233)
clojure.core/print-sequential (core_print.clj:66)
clojure.core/print-prefix-map (core_print.clj:229)
clojure.core/print-map (core_print.clj:238)
clojure.core/fn (core_print.clj:266)
clojure.core/fn (core_print.clj:263)
clojure.lang.MultiFn/invoke (MultiFn.java:234)
clojure.core/pr-on (core.clj:3674)
clojure.core/pr-on (core.clj:3668)
clojure.core/print-prefix-map (core_print.clj:233)
clojure.core/print-sequential (core_print.clj:66)
clojure.core/print-prefix-map (core_print.clj:229)
clojure.core/print-map (core_print.clj:238)
clojure.core/fn (core_print.clj:266)
clojure.core/fn (core_print.clj:263)
clojure.lang.MultiFn/invoke (MultiFn.java:234)
clojure.core/pr-on (core.clj:3674)
clojure.core/pr (core.clj:3677)
clojure.core/apply (core.clj:665)
clojure.core/prn (core.clj:3714)
dijkstra-cljs.viz/show! (NO_SOURCE_FILE:15)
dijkstra-cljs.viz/show! (NO_SOURCE_FILE:12)
dijkstra-cljs.viz/eval33705 (NO_SOURCE_FILE:44)
dijkstra-cljs.viz/eval33705 (NO_SOURCE_FILE:42)
clojure.lang.Compiler/eval (Compiler.java:7177)
clojure.core/eval (core.clj:3214)
clojure.core/eval (core.clj:3210)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:91)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:155)
nrepl.middleware.session/session-exec (session.clj:190)
nrepl.middleware.session/session-exec (session.clj:189)
java.lang.Thread/run (Thread.java:834)
clj::dijkstra-cljs.viz=> 
(:1 :2 :3 :4 :5 :6)
clj::dijkstra-cljs.viz=> 
(:1 :3 :4 :5 :6)
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
; Execution error (IllegalArgumentException) at dijkstra-cljs.viz/add-random-node (REPL:37).
; Don't know how to create ISeq from: clojure.lang.Keyword
clojure.lang.RT/seqFrom (RT.java:557)
clojure.lang.RT/seq (RT.java:537)
clojure.core/seq (core.clj:137)
clojure.core/filter (core.clj:2809)
clojure.lang.LazySeq/sval (LazySeq.java:42)
clojure.lang.LazySeq/seq (LazySeq.java:51)
clojure.lang.RT/seq (RT.java:535)
clojure.lang.RT/countFrom (RT.java:650)
clojure.lang.RT/count (RT.java:643)
clojure.core/rand-nth (core.clj:7238)
clojure.core/rand-nth (core.clj:7231)
dijkstra-cljs.viz/add-random-node (NO_SOURCE_FILE:37)
dijkstra-cljs.viz/add-random-node (NO_SOURCE_FILE:32)
dijkstra-cljs.viz/eval33740 (NO_SOURCE_FILE:43)
dijkstra-cljs.viz/eval33740 (NO_SOURCE_FILE:42)
clojure.lang.Compiler/eval (Compiler.java:7177)
clojure.core/eval (core.clj:3214)
clojure.core/eval (core.clj:3210)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:91)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:155)
nrepl.middleware.session/session-exec (session.clj:190)
nrepl.middleware.session/session-exec (session.clj:189)
java.lang.Thread/run (Thread.java:834)
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:6 5}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:5 2}, :3 {}, :4 {}, :5 {}, :6 {:5 4}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:1 2, :3 5}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:3 3}, :3 {:3 4}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
{:1 {:2 9, :5 1}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:1 4}, :3 {}, :4 {}, :5 {}, :6 {:4 9}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:6 1}, :2 {}, :3 {:6 6}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:3 1}, :3 {}, :4 {}, :5 {:2 2}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:4 5}, :3 {}, :4 {}, :5 {}, :6 {:3 2}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:5 3}, :3 {}, :4 {:1 1}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:5 5}, :2 {:6 5}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:4 6}, :3 {}, :4 {}, :5 {:6 7}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:3 7}, :2 {:4 6}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:2 5}, :6 {:5 5}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:1 9}, :4 {:1 4}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:5 9}, :4 {}, :5 {}, :6 {:2 3}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:6 6}, :3 {:1 9}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:1 9}, :3 {}, :4 {}, :5 {:4 9}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:5 9}, :2 {}, :3 {}, :4 {:3 8}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:3 9}, :2 {}, :3 {}, :4 {:6 7}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:3 4}, :3 {}, :4 {}, :5 {}, :6 {:1 7}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:5 4}, :4 {:1 7}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:5 2}, :2 {}, :3 {:4 5}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:2 9}, :2 {}, :3 {}, :4 {}, :5 {:3 7}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:1 1}, :3 {}, :4 {}, :5 {}, :6 {:3 7}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:5 9}, :5 {:4 1}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:2 1}, :4 {}, :5 {}, :6 {:2 6}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:3 7}, :3 {}, :4 {}, :5 {:2 9}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:6 5, :5 8}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:3 1}, :5 {:2 2}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:4 7}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:1 8, :4 7}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:4 5}, :6 {:2 2}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:1 4}, :6 {:3 5}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:5 8}, :3 {}, :4 {:2 4}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {:5 4, :1 1}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:6 7}, :3 {}, :4 {}, :5 {:3 3}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:4 7}, :4 {:5 6}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:1 3}, :3 {:1 5}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:1 1}, :3 {:6 8}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:6 9}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:4 2}, :3 {}, :4 {}, :5 {}, :6 {:3 5}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:4 2}, :2 {}, :3 {}, :4 {}, :5 {:1 4}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:5 6}, :3 {}, :4 {}, :5 {}, :6 {:1 5}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:5 8}, :4 {}, :5 {:1 1}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:3 2}, :3 {}, :4 {}, :5 {}, :6 {:2 5}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:6 9}, :6 {:4 3}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {:2 7, :3 1}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:5 8}, :2 {}, :3 {:6 3}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:4 7}, :6 {:5 9}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:1 3}, :4 {}, :5 {}, :6 {:3 8}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {:2 8, :1 4}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:3 7}, :2 {}, :3 {}, :4 {:3 3}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:3 9}, :3 {}, :4 {}, :5 {}, :6 {:4 3}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:1 3}, :4 {:2 9}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:6 4}, :4 {}, :5 {}, :6 {:4 6}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:1 7}, :3 {:4 8}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:5 5, :3 1}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:3 2}, :3 {}, :4 {:5 6}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:3 4}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {:4 1}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:1 2}, :5 {}, :6 {:1 2}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:6 6}, :6 {:4 2}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:1 9}, :4 {:6 5}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:4 8}, :2 {}, :3 {}, :4 {}, :5 {:2 8}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:6 1}, :3 {}, :4 {}, :5 {}, :6 {:1 2}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:5 1}, :4 {}, :5 {:4 2}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:4 2}, :4 {:3 5}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/m
clj::dijkstra-cljs.viz=> 
{:4 2}
clj::dijkstra-cljs.viz=> 
true
clj::dijkstra-cljs.viz=> 
(:1 :2 :3 :4 :5 :6)
clj::dijkstra-cljs.viz=> 
; Error printing return value (IllegalArgumentException) at clojure.lang.RT/contains (RT.java:853).
; contains? not supported on type: clojure.lang.Keyword
clojure.main/repl (main.clj:442)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:155)
nrepl.middleware.session/session-exec (session.clj:190)
nrepl.middleware.session/session-exec (session.clj:189)
java.lang.Thread/run (Thread.java:834)
clj::dijkstra-cljs.viz=> 
()
clj::dijkstra-cljs.viz=> 
; Error printing return value (IllegalArgumentException) at clojure.lang.RT/contains (RT.java:853).
; contains? not supported on type: clojure.lang.Keyword
clojure.main/repl (main.clj:442)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:155)
nrepl.middleware.session/session-exec (session.clj:190)
nrepl.middleware.session/session-exec (session.clj:189)
java.lang.Thread/run (Thread.java:834)
clj::dijkstra-cljs.viz=> 
true
clj::dijkstra-cljs.viz=> 
true
clj::dijkstra-cljs.viz=> 
; Error printing return value (ArityException) at clojure.lang.AFn/throwArity (AFn.java:429).
; Wrong number of args (1) passed to: clojure.core/contains?
clojure.main/repl (main.clj:442)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:155)
nrepl.middleware.session/session-exec (session.clj:190)
nrepl.middleware.session/session-exec (session.clj:189)
java.lang.Thread/run (Thread.java:834)
clj::dijkstra-cljs.viz=> 
; Error printing return value (IllegalArgumentException) at clojure.lang.APersistentVector/null (APersistentVector.java:294).
; Key must be integer
clojure.main/repl (main.clj:442)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:155)
nrepl.middleware.session/session-exec (session.clj:190)
nrepl.middleware.session/session-exec (session.clj:189)
java.lang.Thread/run (Thread.java:834)
clj::dijkstra-cljs.viz=> 
(:3)
clj::dijkstra-cljs.viz=> 
(:3)
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
; Execution error (ClassCastException) at (REPL:1).
; null

clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
; Execution error (ClassCastException) at (REPL:1).
; null

clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
; Execution error (ClassCastException) at (REPL:1).
; null

clj::dijkstra-cljs.viz=> 
; Execution error (ClassCastException) at (REPL:1).
; null

clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:6 6}, :4 {}, :5 {}, :6 {}}
clj::dijkstra-cljs.viz=> 
{:1 {:6 8}, :2 {}, :3 {:5 8}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:6 8}, :5 {:2 8}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:3 6}, :2 {}, :3 {:1 6}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
{:1 {:4 7}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:2 4, :6 7}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:4 1}, :3 {}, :4 {}, :5 {:2 7}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:2 4}, :4 {}, :5 {:6 9}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:2 1}, :4 {}, :5 {}, :6 {:1 6}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:2 3}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:4 4}, :4 {}, :5 {}, :6 {:2 8}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:1 5}, :4 {:5 8}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:2 8}, :6 {:3 4}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:2 3}, :4 {}, :5 {}, :6 {:3 6}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:6 1}, :5 {}, :6 {:1 5}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:1 8}, :3 {}, :4 {}, :5 {:4 9}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:3 1}, :3 {}, :4 {}, :5 {}, :6 {:2 3}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:1 5, :5 6}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:4 7}, :4 {:2 9}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:2 9}, :5 {:2 3}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:2 7}, :4 {:6 3}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:2 8}, :4 {}, :5 {}, :6 {:3 8}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:1 3, :6 3}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {:1 7, :4 6}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:4 3}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {:4 1}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:4 7}, :3 {}, :4 {}, :5 {:2 9}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:3 3}, :2 {}, :3 {}, :4 {}, :5 {:3 5}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:1 8}, :3 {}, :4 {}, :5 {:4 1}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:1 5}, :3 {}, :4 {}, :5 {}, :6 {:2 1}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {:3 4, :2 7}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:2 5}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:4 5}, :4 {}, :5 {}, :6 {:5 5}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:5 7}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {:5 6}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:5 8}, :3 {:5 9}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:5 4}, :2 {}, :3 {}, :4 {:5 5}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:4 7}, :3 {}, :4 {}, :5 {}, :6 {:3 4}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:6 4, :3 9}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:3 6}, :5 {}, :6 {:2 6}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:1 3, :4 8}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:6 2, :4 2}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:4 5, :5 1}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:6 9}, :2 {}, :3 {}, :4 {}, :5 {:3 4}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:5 2}, :2 {}, :3 {:1 7}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:4 2}, :3 {}, :4 {}, :5 {:3 7}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:5 5}, :3 {}, :4 {:1 3}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:3 3}, :6 {:4 3}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:6 3, :3 5}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:4 5}, :3 {}, :4 {}, :5 {:6 8}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:4 1}, :2 {:5 1}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:5 8}, :3 {}, :4 {:3 4}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:1 9}, :4 {}, :5 {:3 3}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:4 5}, :4 {:6 1}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:4 1}, :4 {:1 4}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:1 7}, :6 {:5 8}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:3 1}, :5 {:1 1}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:6 1}, :3 {}, :4 {}, :5 {}, :6 {:4 1}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:3 5}, :3 {}, :4 {}, :5 {}, :6 {:1 8}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:3 2}, :3 {}, :4 {:3 7}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:6 6}, :5 {:6 3}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:1 8, :3 9}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:6 7}, :3 {}, :4 {:2 2}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:3 2}, :2 {}, :3 {}, :4 {}, :5 {:1 9}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:5 1}, :2 {:6 4}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:2 9}, :4 {}, :5 {}, :6 {:4 6}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:4 2}, :2 {:4 1}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {:5 7}, :5 {}, :6 {:1 9}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:2 8}, :2 {}, :3 {:1 6}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:3 6}, :2 {:6 4}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:3 2}, :2 {}, :3 {:4 4}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:1 8, :4 6}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:3 9}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {:5 3}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:4 8}, :2 {}, :3 {}, :4 {}, :5 {:6 7}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:3 1}, :3 {}, :4 {:1 9}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:6 5}, :3 {}, :4 {}, :5 {}, :6 {:3 2}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:3 5}, :2 {:1 2}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:1 3}, :3 {}, :4 {}, :5 {:6 5}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:6 4}, :2 {}, :3 {}, :4 {:5 2}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:4 6}, :3 {:4 2}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:5 7, :4 2}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:5 9}, :2 {}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/add-random-node
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {}, :4 {}, :5 {:3 2}, :6 {:1 2}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:3 3}, :2 {:1 8}, :3 {}, :4 {}, :5 {}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:3 9}, :3 {}, :4 {}, :5 {}, :6 {:5 9}}
nil
clj::dijkstra-cljs.viz=> 
(#function[clojure.core/vals]
 #function[clojure.core/vals]
 #function[clojure.core/vals]
 #function[clojure.core/vals]
 #function[clojure.core/vals]
 #function[clojure.core/vals])
clj::dijkstra-cljs.viz=> 
(#function[clojure.core/vals]
 #function[clojure.core/vals]
 #function[clojure.core/vals]
 #function[clojure.core/vals]
 #function[clojure.core/vals]
 #function[clojure.core/vals])
clj::dijkstra-cljs.viz=> 
; Error printing return value (ClassCastException) at clojure.lang.APersistentMap$ValSeq/first (APersistentMap.java:236).
; class clojure.lang.Keyword cannot be cast to class java.util.Map$Entry (clojure.lang.Keyword is in unnamed module of loader 'app'; java.util.Map$Entry is in module java.base of loader 'bootstrap')
clojure.main/repl (main.clj:442)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:155)
nrepl.middleware.session/session-exec (session.clj:190)
nrepl.middleware.session/session-exec (session.clj:189)
java.lang.Thread/run (Thread.java:834)
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/m
clj::dijkstra-cljs.viz=> 
([:1 {}] [:2 {}] [:3 {:4 2}] [:4 {:3 5}] [:5 {}] [:6 {}])
clj::dijkstra-cljs.viz=> 
({} {} {:4 2} {:3 5} {} {})
clj::dijkstra-cljs.viz=> 
##NaN
clj::dijkstra-cljs.viz=> 
({} {} {:4 2} {:3 5} {} {})
clj::dijkstra-cljs.viz=> 
; Error printing return value (ClassCastException) at clojure.lang.APersistentMap$ValSeq/first (APersistentMap.java:236).
; class clojure.lang.Keyword cannot be cast to class java.util.Map$Entry (clojure.lang.Keyword is in unnamed module of loader 'app'; java.util.Map$Entry is in module java.base of loader 'bootstrap')
clojure.main/repl (main.clj:442)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:155)
nrepl.middleware.session/session-exec (session.clj:190)
nrepl.middleware.session/session-exec (session.clj:189)
java.lang.Thread/run (Thread.java:834)
clj::dijkstra-cljs.viz=> 
; Syntax error reading source at (REPL:53:43).
; Duplicate key: :3
clojure.main/repl (main.clj:433)
clojure.main/repl (main.clj:432)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:155)
nrepl.middleware.session/session-exec (session.clj:190)
nrepl.middleware.session/session-exec (session.clj:189)
java.lang.Thread/run (Thread.java:834)
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/m
clj::dijkstra-cljs.viz=> 
({} {} {:4 2} {:3 5, :2 5} {} {})
clj::dijkstra-cljs.viz=> 
()
clj::dijkstra-cljs.viz=> 
(:1 {} :2 {} :3 {:4 2} :4 {:3 5, :2 5} :5 {} :6 {})
clj::dijkstra-cljs.viz=> 
({} {} {:4 2} {:3 5, :2 5} {} {})
clj::dijkstra-cljs.viz=> 
(() () () () () ())
clj::dijkstra-cljs.viz=> 
({} {} {:4 2} {:3 5, :2 5} {} {})
clj::dijkstra-cljs.viz=> 
[{} {} {:4 2} {:3 5, :2 5} {} {}]
clj::dijkstra-cljs.viz=> 
(0 0 1 2 0 0)
clj::dijkstra-cljs.viz=> 
; Error printing return value (IllegalArgumentException) at clojure.lang.RT/seqFrom (RT.java:557).
; Don't know how to create ISeq from: java.lang.Integer
clojure.main/repl (main.clj:442)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:155)
nrepl.middleware.session/session-exec (session.clj:190)
nrepl.middleware.session/session-exec (session.clj:189)
java.lang.Thread/run (Thread.java:834)
clj::dijkstra-cljs.viz=> 
3
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/count-edges
clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/rand-graph
clj::dijkstra-cljs.viz=> 
; Execution error (ClassCastException) at (REPL:1).
; null

clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/rand-graph
clj::dijkstra-cljs.viz=> 
; Execution error (ClassCastException) at (REPL:1).
; null

clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/rand-graph
clj::dijkstra-cljs.viz=> 
; Execution error (ClassCastException) at (REPL:1).
; null

clj::dijkstra-cljs.viz=> 
#'dijkstra-cljs.viz/rand-graph
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {}, :3 {:6 6}, :4 {:3 2, :2 1}, :5 {:6 8, :1 2}, :6 {:4 1}}
clj::dijkstra-cljs.viz=> 
{:1 {:6 7, :4 3}, :2 {}, :3 {:5 2}, :4 {:6 3}, :5 {:1 3}, :6 {:3 3}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {}, :2 {:4 1}, :3 {:5 6, :1 5}, :4 {}, :5 {:6 3, :1 1, :2 2}, :6 {}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:4 1}, :2 {}, :3 {:2 9, :5 3}, :4 {:3 7}, :5 {:1 4}, :6 {:5 5}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:6 4}, :2 {:6 9, :5 5}, :3 {}, :4 {:2 9}, :5 {:1 3}, :6 {:3 5}}
nil
clj::dijkstra-cljs.viz=> 
{:1 {:4 5}, :2 {:5 1, :4 9}, :3 {}, :4 {}, :5 {:4 7}, :6 {:5 7, :1 2}}
nil
clj::dijkstra-cljs.viz=> 
